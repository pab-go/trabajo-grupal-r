TRUE ~ "OTROS"
)
) |>
group_by(fecha, Grupo) |>
summarise(
n_votos = sum(votos, na.rm = TRUE),   # Total de votos del grupo por elección
.groups = "drop"
) |>
left_join(censo_por_eleccion, by = "fecha") |>  # Añadir el censo total por elección
mutate(
porcentaje = (n_votos / censo_total) * 100  # Calcular porcentaje sobre el censo total
)
BROWN <- "#AD8C97"
YELLOW <- "yellow"
GREEN <- "#2FC1D3"
BLUE <- "#076FA1"
GREY <- "#C7C9CB"
GREY_DARKER <- "#5C5B5D"
RED <- "#E3120B"
resultados_porcentajes2 <- resultados_porcentajes2 |>
mutate(Grupo = factor(Grupo, levels = c("OTROS","IZQUIERDAS",  "NACIONALISTA/REGIONALISTA", "CENTRO","DERECHAS")))
plt2 <- ggplot(resultados_porcentajes2, aes(fecha, porcentaje)) +
geom_line(aes(color = Grupo, size = 2)) +
geom_point(
aes(fill = Grupo),
size = 5,
pch = 21, # Type of point that allows us to have both color (border) and fill.
color = "white",
stroke = 1 # The width of the border, i.e. stroke.
) +
scale_color_manual(values = c(BLUE, GREEN, BROWN,GREY,YELLOW)) +
scale_fill_manual(values = c(BLUE, GREEN, BROWN,GREY,YELLOW)) +
theme(legend.position = "bottom")+
scale_x_date(
breaks = unique(resultados_porcentajes$fecha),   # Usar solo las fechas específicas
date_labels = "%Y"           # Mostrar solo el año en las etiquetas
) +
scale_y_continuous(
breaks = seq(0, 100, by = 5),  # Intervalos de 5 unidades en el eje Y
limits = c(0, 100)  )+
theme(
# Set background color to white
panel.background = element_rect(fill = "white"),
# Remove all grid lines
panel.grid = element_blank(),
# But add grid lines for the vertical axis, customizing color and size
panel.grid.major.y = element_line(color = "#A8BAC4", size = 0.3),
# Remove tick marks on the vertical axis by setting their length to 0
axis.ticks.length.y = unit(0, "mm"),
# But keep tick marks on horizontal axis
axis.ticks.length.x = unit(2, "mm"),
# Remove the title for both axes
axis.title = element_blank(),
# Only the bottom line of the vertical axis is painted in black
axis.line.x.bottom = element_line(color = "black"),
# Remove labels from the vertical axis
axis.text.y = element_blank(),
# But customize labels for the horizontal axis
axis.text.x = element_text(family = "Econ Sans Cnd", size = 12)
)+
theme_minimal() +
theme(
axis.title = element_text(size = 11, face = "bold"), # Estilo de títulos de los ejes
axis.text = element_text(size = 9)                 # Estilo de texto de las marcas de los ejes
) +
labs(
title = "Evolución del porcentaje de votos por grupo",
x = "Fecha de la elección",
y = "Porcentaje de votos (%)"
)
# Añadir título estilizado
plt1 <- plt1 +
labs(
title = "**Evolución de grupos políticos:** % de votos"
) +
theme(
plot.title = element_markdown(
family = "Econ Sans Cnd",
size = 15
)
)
plt2
combined_plot <- (plt1 + plt2) +
plot_layout(guides = "collect") &
theme(legend.position="bottom")+
labs(title="Evolución de grupos del congreso de dos formas distintas",
y="porcentaje de votos")
combined_plot
# Paso 1: Calcular el censo único por elección
censo_por_eleccion <- election_data |>
group_by(fecha, id_mun) |>  # Agrupar por elección y municipio
slice(1)|>
ungroup() |>
group_by(fecha) |>  # Agrupar nuevamente por elección
summarise(censo_total = sum(participacion, na.rm = TRUE), .groups = "drop")  # Sumar el censo por elección
# Paso 2: Agrupar votos por grupo y calcular el porcentaje
resultados_porcentajes2 <- election_data |>
mutate(
Grupo = case_when(
str_detect(siglas, "VOX|PP") ~ "DERECHAS",
str_detect(siglas, "PSOE|UP|MP") ~ "IZQUIERDAS",
str_detect(siglas, "PNV|BNG|ERC|BILDU|CONVERGÈNCIA I UNIÓ") ~ "NACIONALISTA/REGIONALISTA",
str_detect(siglas, "CS") ~ "CENTRO",
TRUE ~ "OTROS"
)
) |>
group_by(fecha, Grupo) |>
summarise(
n_votos = sum(votos, na.rm = TRUE),   # Total de votos del grupo por elección
.groups = "drop"
) |>
left_join(censo_por_eleccion, by = "fecha") |>  # Añadir el censo total por elección
mutate(
porcentaje = (n_votos / censo_total) * 100  # Calcular porcentaje sobre el censo total
)
BROWN <- "#AD8C97"
YELLOW <- "yellow"
GREEN <- "#2FC1D3"
BLUE <- "#076FA1"
GREY <- "#C7C9CB"
GREY_DARKER <- "#5C5B5D"
RED <- "#E3120B"
resultados_porcentajes2 <- resultados_porcentajes2 |>
mutate(Grupo = factor(Grupo, levels = c("OTROS","IZQUIERDAS",  "NACIONALISTA/REGIONALISTA", "CENTRO","DERECHAS")))
plt2 <- ggplot(resultados_porcentajes2, aes(fecha, porcentaje)) +
geom_line(aes(color = Grupo, size = 2)) +
geom_point(
aes(fill = Grupo),
size = 5,
pch = 21, # Type of point that allows us to have both color (border) and fill.
color = "white",
stroke = 1 # The width of the border, i.e. stroke.
) +
scale_color_manual(values = c(BLUE, GREEN, BROWN,GREY,YELLOW)) +
scale_fill_manual(values = c(BLUE, GREEN, BROWN,GREY,YELLOW)) +
theme(legend.position = "bottom")+
scale_x_date(
breaks = unique(resultados_porcentajes$fecha),   # Usar solo las fechas específicas
date_labels = "%Y"           # Mostrar solo el año en las etiquetas
) +
scale_y_continuous(
breaks = seq(0, 100, by = 5),  # Intervalos de 5 unidades en el eje Y
limits = c(0, 100)  )+
theme(
# Set background color to white
panel.background = element_rect(fill = "white"),
# Remove all grid lines
panel.grid = element_blank(),
# But add grid lines for the vertical axis, customizing color and size
panel.grid.major.y = element_line(color = "#A8BAC4", size = 0.3),
# Remove tick marks on the vertical axis by setting their length to 0
axis.ticks.length.y = unit(0, "mm"),
# But keep tick marks on horizontal axis
axis.ticks.length.x = unit(2, "mm"),
# Remove the title for both axes
axis.title = element_blank(),
# Only the bottom line of the vertical axis is painted in black
axis.line.x.bottom = element_line(color = "black"),
# Remove labels from the vertical axis
axis.text.y = element_blank(),
# But customize labels for the horizontal axis
axis.text.x = element_text(family = "Econ Sans Cnd", size = 12)
)+
theme_minimal() +
theme(
axis.title = element_text(size = 11, face = "bold"), # Estilo de títulos de los ejes
axis.text = element_text(size = 9)                 # Estilo de texto de las marcas de los ejes
) +
labs(
title = "Evolución del porcentaje de votos por grupo",
x = "Fecha de la elección",
y = "Porcentaje de votos (%)"
)
# Añadir título estilizado
plt1 <- plt1 +
labs(
title = "**Evolución de grupos políticos:** % de votos"
) +
theme(
plot.title = element_markdown(
family = "Econ Sans Cnd",
size = 15
)
)
plt2
combined_plot <- (plt1 + plt2) +
plot_layout(guides = "collect") &
theme(legend.position="bottom")&
labs(title="Evolución de grupos del congreso de dos formas distintas",
y="porcentaje de votos")
combined_plot
# Paso 1: Calcular el censo único por elección
censo_por_eleccion <- election_data |>
group_by(fecha, id_mun) |>  # Agrupar por elección y municipio
slice(1)|>
ungroup() |>
group_by(fecha) |>  # Agrupar nuevamente por elección
summarise(censo_total = sum(participacion, na.rm = TRUE), .groups = "drop")  # Sumar el censo por elección
# Paso 2: Agrupar votos por grupo y calcular el porcentaje
resultados_porcentajes2 <- election_data |>
mutate(
Grupo = case_when(
str_detect(siglas, "VOX|PP") ~ "DERECHAS",
str_detect(siglas, "PSOE|UP|MP") ~ "IZQUIERDAS",
str_detect(siglas, "PNV|BNG|ERC|BILDU|CONVERGÈNCIA I UNIÓ") ~ "NACIONALISTA/REGIONALISTA",
str_detect(siglas, "CS") ~ "CENTRO",
TRUE ~ "OTROS"
)
) |>
group_by(fecha, Grupo) |>
summarise(
n_votos = sum(votos, na.rm = TRUE),   # Total de votos del grupo por elección
.groups = "drop"
) |>
left_join(censo_por_eleccion, by = "fecha") |>  # Añadir el censo total por elección
mutate(
porcentaje = (n_votos / censo_total) * 100  # Calcular porcentaje sobre el censo total
)
BROWN <- "#AD8C97"
YELLOW <- "yellow"
GREEN <- "#2FC1D3"
BLUE <- "#076FA1"
GREY <- "#C7C9CB"
GREY_DARKER <- "#5C5B5D"
RED <- "#E3120B"
resultados_porcentajes2 <- resultados_porcentajes2 |>
mutate(Grupo = factor(Grupo, levels = c("OTROS","IZQUIERDAS",  "NACIONALISTA/REGIONALISTA", "CENTRO","DERECHAS")))
plt2 <- ggplot(resultados_porcentajes2, aes(fecha, porcentaje)) +
geom_line(aes(color = Grupo, size = 2)) +
geom_point(
aes(fill = Grupo),
size = 5,
pch = 21, # Type of point that allows us to have both color (border) and fill.
color = "white",
stroke = 1 # The width of the border, i.e. stroke.
) +
scale_color_manual(values = c(BLUE, GREEN, BROWN,GREY,YELLOW)) +
scale_fill_manual(values = c(BLUE, GREEN, BROWN,GREY,YELLOW)) +
theme(legend.position = "bottom")+
scale_x_date(
breaks = unique(resultados_porcentajes$fecha),   # Usar solo las fechas específicas
date_labels = "%Y"           # Mostrar solo el año en las etiquetas
) +
scale_y_continuous(
breaks = seq(0, 100, by = 5),  # Intervalos de 5 unidades en el eje Y
limits = c(0, 100)  )+
theme(
# Set background color to white
panel.background = element_rect(fill = "white"),
# Remove all grid lines
panel.grid = element_blank(),
# But add grid lines for the vertical axis, customizing color and size
panel.grid.major.y = element_line(color = "#A8BAC4", size = 0.3),
# Remove tick marks on the vertical axis by setting their length to 0
axis.ticks.length.y = unit(0, "mm"),
# But keep tick marks on horizontal axis
axis.ticks.length.x = unit(2, "mm"),
# Remove the title for both axes
axis.title = element_blank(),
# Only the bottom line of the vertical axis is painted in black
axis.line.x.bottom = element_line(color = "black"),
# Remove labels from the vertical axis
axis.text.y = element_blank(),
# But customize labels for the horizontal axis
axis.text.x = element_text(family = "Econ Sans Cnd", size = 12)
)+
theme_minimal() +
theme(
axis.title = element_text(size = 11, face = "bold"), # Estilo de títulos de los ejes
axis.text = element_text(size = 9)                 # Estilo de texto de las marcas de los ejes
) +
labs(
title = "Evolución del porcentaje de votos por grupo",
x = "Fecha de la elección",
y = "Porcentaje de votos (%)"
)
# Añadir título estilizado
plt1 <- plt1 +
labs(
title = "**Evolución de grupos políticos:** % de votos"
) +
theme(
plot.title = element_markdown(
family = "Econ Sans Cnd",
size = 15
)
)
plt2
combined_plot <- (plt1 + plt2) +
plot_layout(guides = "keep") +  # Mantener leyendas separadas
plot_annotation(
title = "Evolución de grupos del congreso de dos formas distintas",
theme = theme(
plot.title = element_text(size = 16, face = "bold"),  # Un solo título central
axis.title.y = element_text(size = 12, face = "bold"), # Un solo eje Y
axis.title.x = element_blank() # Ocultar título eje X
)
)
combined_plot
# Paso 1: Calcular el censo único por elección
censo_por_eleccion <- election_data |>
group_by(fecha, id_mun) |>  # Agrupar por elección y municipio
slice(1)|>
ungroup() |>
group_by(fecha) |>  # Agrupar nuevamente por elección
summarise(censo_total = sum(participacion, na.rm = TRUE), .groups = "drop")  # Sumar el censo por elección
# Paso 2: Agrupar votos por grupo y calcular el porcentaje
resultados_porcentajes2 <- election_data |>
mutate(
Grupo = case_when(
str_detect(siglas, "VOX|PP") ~ "DERECHAS",
str_detect(siglas, "PSOE|UP|MP") ~ "IZQUIERDAS",
str_detect(siglas, "PNV|BNG|ERC|BILDU|CONVERGÈNCIA I UNIÓ") ~ "NACIONALISTA/REGIONALISTA",
str_detect(siglas, "CS") ~ "CENTRO",
TRUE ~ "OTROS"
)
) |>
group_by(fecha, Grupo) |>
summarise(
n_votos = sum(votos, na.rm = TRUE),   # Total de votos del grupo por elección
.groups = "drop"
) |>
left_join(censo_por_eleccion, by = "fecha") |>  # Añadir el censo total por elección
mutate(
porcentaje = (n_votos / censo_total) * 100  # Calcular porcentaje sobre el censo total
)
BROWN <- "#AD8C97"
YELLOW <- "yellow"
GREEN <- "#2FC1D3"
BLUE <- "#076FA1"
GREY <- "#C7C9CB"
GREY_DARKER <- "#5C5B5D"
RED <- "#E3120B"
resultados_porcentajes2 <- resultados_porcentajes2 |>
mutate(Grupo = factor(Grupo, levels = c("OTROS","IZQUIERDAS",  "NACIONALISTA/REGIONALISTA", "CENTRO","DERECHAS")))
plt2 <- ggplot(resultados_porcentajes2, aes(fecha, porcentaje)) +
geom_line(aes(color = Grupo, size = 2)) +
geom_point(
aes(fill = Grupo),
size = 5,
pch = 21, # Type of point that allows us to have both color (border) and fill.
color = "white",
stroke = 1 # The width of the border, i.e. stroke.
) +
scale_color_manual(values = c(BLUE, GREEN, BROWN,GREY,YELLOW)) +
scale_fill_manual(values = c(BLUE, GREEN, BROWN,GREY,YELLOW)) +
theme(legend.position = "bottom")+
scale_x_date(
breaks = unique(resultados_porcentajes$fecha),   # Usar solo las fechas específicas
date_labels = "%Y"           # Mostrar solo el año en las etiquetas
) +
scale_y_continuous(
breaks = seq(0, 100, by = 5),  # Intervalos de 5 unidades en el eje Y
limits = c(0, 100)  )+
theme(
# Set background color to white
panel.background = element_rect(fill = "white"),
# Remove all grid lines
panel.grid = element_blank(),
# But add grid lines for the vertical axis, customizing color and size
panel.grid.major.y = element_line(color = "#A8BAC4", size = 0.3),
# Remove tick marks on the vertical axis by setting their length to 0
axis.ticks.length.y = unit(0, "mm"),
# But keep tick marks on horizontal axis
axis.ticks.length.x = unit(2, "mm"),
# Remove the title for both axes
axis.title = element_blank(),
# Only the bottom line of the vertical axis is painted in black
axis.line.x.bottom = element_line(color = "black"),
# Remove labels from the vertical axis
axis.text.y = element_blank(),
# But customize labels for the horizontal axis
axis.text.x = element_text(family = "Econ Sans Cnd", size = 12)
)+
theme_minimal() +
theme(
axis.title = element_text(size = 11, face = "bold"), # Estilo de títulos de los ejes
axis.text = element_text(size = 9)                 # Estilo de texto de las marcas de los ejes
) +
labs(
title = "Evolución del porcentaje de votos por grupo",
x = "Fecha de la elección",
y = "Porcentaje de votos (%)"
)
# Añadir título estilizado
plt1 <- plt1 +
labs(
title = "**Evolución de grupos políticos:** % de votos"
) +
theme(
plot.title = element_markdown(
family = "Econ Sans Cnd",
size = 15
)
)
plt2
combined_plot <- (plt1 + plt2) +
plot_layout(guides = "keep") +  # Mantener leyendas separadas
plot_annotation(
title = "Evolución de grupos del congreso de dos formas distintas",
theme = theme(
legend.position = "bottom"
plot.title = element_text(size = 16, face = "bold"),  # Un solo título central
# Paso 1: Calcular el censo único por elección
censo_por_eleccion <- election_data |>
group_by(fecha, id_mun) |>  # Agrupar por elección y municipio
slice(1)|>
ungroup() |>
group_by(fecha) |>  # Agrupar nuevamente por elección
summarise(censo_total = sum(participacion, na.rm = TRUE), .groups = "drop")  # Sumar el censo por elección
# Paso 2: Agrupar votos por grupo y calcular el porcentaje
resultados_porcentajes2 <- election_data |>
mutate(
Grupo = case_when(
str_detect(siglas, "VOX|PP") ~ "DERECHAS",
str_detect(siglas, "PSOE|UP|MP") ~ "IZQUIERDAS",
str_detect(siglas, "PNV|BNG|ERC|BILDU|CONVERGÈNCIA I UNIÓ") ~ "NACIONALISTA/REGIONALISTA",
str_detect(siglas, "CS") ~ "CENTRO",
TRUE ~ "OTROS"
)
) |>
group_by(fecha, Grupo) |>
summarise(
n_votos = sum(votos, na.rm = TRUE),   # Total de votos del grupo por elección
.groups = "drop"
) |>
left_join(censo_por_eleccion, by = "fecha") |>  # Añadir el censo total por elección
mutate(
porcentaje = (n_votos / censo_total) * 100  # Calcular porcentaje sobre el censo total
)
BROWN <- "#AD8C97"
YELLOW <- "yellow"
GREEN <- "#2FC1D3"
BLUE <- "#076FA1"
GREY <- "#C7C9CB"
GREY_DARKER <- "#5C5B5D"
RED <- "#E3120B"
resultados_porcentajes2 <- resultados_porcentajes2 |>
mutate(Grupo = factor(Grupo, levels = c("OTROS","IZQUIERDAS",  "NACIONALISTA/REGIONALISTA", "CENTRO","DERECHAS")))
plt2 <- ggplot(resultados_porcentajes2, aes(fecha, porcentaje)) +
geom_line(aes(color = Grupo, size = 2)) +
geom_point(
aes(fill = Grupo),
size = 5,
pch = 21, # Type of point that allows us to have both color (border) and fill.
color = "white",
stroke = 1 # The width of the border, i.e. stroke.
) +
scale_color_manual(values = c(BLUE, GREEN, BROWN,GREY,YELLOW)) +
scale_fill_manual(values = c(BLUE, GREEN, BROWN,GREY,YELLOW)) +
theme(legend.position = "bottom")+
scale_x_date(
breaks = unique(resultados_porcentajes$fecha),   # Usar solo las fechas específicas
date_labels = "%Y"           # Mostrar solo el año en las etiquetas
) +
scale_y_continuous(
breaks = seq(0, 100, by = 5),  # Intervalos de 5 unidades en el eje Y
limits = c(0, 100)  )+
theme(
# Set background color to white
panel.background = element_rect(fill = "white"),
# Remove all grid lines
panel.grid = element_blank(),
# But add grid lines for the vertical axis, customizing color and size
panel.grid.major.y = element_line(color = "#A8BAC4", size = 0.3),
# Remove tick marks on the vertical axis by setting their length to 0
axis.ticks.length.y = unit(0, "mm"),
# But keep tick marks on horizontal axis
axis.ticks.length.x = unit(2, "mm"),
# Remove the title for both axes
axis.title = element_blank(),
# Only the bottom line of the vertical axis is painted in black
axis.line.x.bottom = element_line(color = "black"),
# Remove labels from the vertical axis
axis.text.y = element_blank(),
# But customize labels for the horizontal axis
axis.text.x = element_text(family = "Econ Sans Cnd", size = 12)
)+
theme_minimal() +
theme(
axis.title = element_text(size = 11, face = "bold"), # Estilo de títulos de los ejes
axis.text = element_text(size = 9)                 # Estilo de texto de las marcas de los ejes
) +
labs(
title = "Evolución del porcentaje de votos por grupo",
x = "Fecha de la elección",
y = "Porcentaje de votos (%)"
)
# Añadir título estilizado
plt1 <- plt1 +
labs(
title = "**Evolución de grupos políticos:** % de votos"
) +
theme(
plot.title = element_markdown(
family = "Econ Sans Cnd",
size = 15
)
)
plt2
combined_plot <- (plt1 + plt2) +
plot_layout(guides = "keep") +  # Mantener leyendas separadas
plot_annotation(
title = "Evolución de grupos del congreso de dos formas distintas",
theme = theme(
legend.position = "bottom",
plot.title = element_text(size = 16, face = "bold"),  # Un solo título central
axis.title.y = element_text(size = 12, face = "bold"), # Un solo eje Y
axis.title.x = element_blank() # Ocultar título eje X
)
)
combined_plot

library(dplyr)
library(glue)
library(lubridate)
# Seleccionar el partido ganador por municipio y clasificar por zona
election_data <- election_data |>
mutate(
zona = if_else(censo <= 2500, "Rural", "Urbana")                      # Clasificación por zona
)
votos_por_zona <- election_data |> summarise(votos=sum(votos), .by = c(zona,siglas))
votos_por_zona2 <- votos_por_zona |> pivot_wider(names_from = zona, values_from = votos) |> mutate(rural=(Rural/sum(Rural))*100, urbana=(Urbana/sum(Urbana))*100, dif_perc=rural-urbana)
wilcox.test(votos_por_zona2$rural, votos_por_zona2$urbana, paired = TRUE)
#UN gráfico para verlo, aunque no hay muchas diferencias
library(forcats)
# Suponiendo que tienes el dataframe 'votos_por_zona2' con las variables 'siglas' y 'dif_perc'
ggplot(votos_por_zona2) +
geom_col(aes(x = fct_reorder(siglas, dif_perc), y = dif_perc, fill = dif_perc)) +  # Colorear las barras
scale_y_continuous(limits = c(-100, 100)) +  # Escala en el eje y de -100 a 100
scale_fill_manual(c(CS = "orange", UP = "purple", VOX = "green",OTROS="grey",MP="#009975",BNG="#6AADE4",PNV="#086522",CIU="#FFDFC4",ERC="yellow",BILDU="#30D5C8",PSOE="red", PP="blue"))
library(dplyr)
library(glue)
library(lubridate)
# Seleccionar el partido ganador por municipio y clasificar por zona
election_data <- election_data |>
mutate(
zona = if_else(censo <= 2500, "Rural", "Urbana")                      # Clasificación por zona
)
votos_por_zona <- election_data |> summarise(votos=sum(votos), .by = c(zona,siglas))
votos_por_zona2 <- votos_por_zona |> pivot_wider(names_from = zona, values_from = votos) |> mutate(rural=(Rural/sum(Rural))*100, urbana=(Urbana/sum(Urbana))*100, dif_perc=rural-urbana)
wilcox.test(votos_por_zona2$rural, votos_por_zona2$urbana, paired = TRUE)
#UN gráfico para verlo, aunque no hay muchas diferencias
library(forcats)
# Suponiendo que tienes el dataframe 'votos_por_zona2' con las variables 'siglas' y 'dif_perc'
ggplot(votos_por_zona2) +
geom_col(aes(x = fct_reorder(siglas, dif_perc), y = dif_perc, fill = dif_perc)) +  # Colorear las barras
scale_y_continuous(limits = c(-100, 100)) +  # Escala en el eje y de -100 a 100
scale_fill_manual(values= c(CS = "orange", UP = "purple", VOX = "green",OTROS="grey",MP="#009975",BNG="#6AADE4",PNV="#086522",CIU="#FFDFC4",ERC="yellow",BILDU="#30D5C8",PSOE="red", PP="blue"))
library(dplyr)
library(glue)
library(lubridate)
# Seleccionar el partido ganador por municipio y clasificar por zona
election_data <- election_data |>
mutate(
zona = if_else(censo <= 2500, "Rural", "Urbana")                      # Clasificación por zona
)
votos_por_zona <- election_data |> summarise(votos=sum(votos), .by = c(zona,siglas))
votos_por_zona2 <- votos_por_zona |> pivot_wider(names_from = zona, values_from = votos) |> mutate(rural=(Rural/sum(Rural))*100, urbana=(Urbana/sum(Urbana))*100, dif_perc=rural-urbana)
wilcox.test(votos_por_zona2$rural, votos_por_zona2$urbana, paired = TRUE)
#UN gráfico para verlo, aunque no hay muchas diferencias
library(forcats)
# Suponiendo que tienes el dataframe 'votos_por_zona2' con las variables 'siglas' y 'dif_perc'
ggplot(votos_por_zona2) +
geom_col(aes(x = fct_reorder(siglas, dif_perc), y = dif_perc)) +  # Colorear las barras
scale_y_continuous(limits = c(-100, 100)) +  # Escala en el eje y de -100 a 100
scale_fill_manual(values= c(CS = "orange", UP = "purple", VOX = "green",OTROS="grey",MP="#009975",BNG="#6AADE4",PNV="#086522",CIU="#FFDFC4",ERC="yellow",BILDU="#30D5C8",PSOE="red", PP="blue"))
library(dplyr)
library(glue)
library(lubridate)
# Seleccionar el partido ganador por municipio y clasificar por zona
election_data <- election_data |>
mutate(
zona = if_else(censo <= 2500, "Rural", "Urbana")                      # Clasificación por zona
)
votos_por_zona <- election_data |> summarise(votos=sum(votos), .by = c(zona,siglas))
votos_por_zona2 <- votos_por_zona |> pivot_wider(names_from = zona, values_from = votos) |> mutate(rural=(Rural/sum(Rural))*100, urbana=(Urbana/sum(Urbana))*100, dif_perc=rural-urbana)
wilcox.test(votos_por_zona2$rural, votos_por_zona2$urbana, paired = TRUE)
#UN gráfico para verlo, aunque no hay muchas diferencias
library(forcats)
# Suponiendo que tienes el dataframe 'votos_por_zona2' con las variables 'siglas' y 'dif_perc'
ggplot(votos_por_zona2) +
geom_col(aes(x = fct_reorder(siglas, dif_perc), y = dif_perc)) +  # Colorear las barras
scale_y_continuous(limits = c(-100, 100)) +  # Escala en el eje y de -100 a 100
scale_fill_manual(values= c(CS = "orange", UP = "purple", VOX = "green",OTROS="grey",MP="#009975",BNG="#6AADE4",PNV="#086522",CONVERGÈNCIA I UNIÓ="#FFDFC4",ERC="yellow",BILDU="#30D5C8",PSOE="red", PP="blue"))
library(dplyr)
library(glue)
library(lubridate)
# Seleccionar el partido ganador por municipio y clasificar por zona
election_data <- election_data |>
mutate(
zona = if_else(censo <= 2500, "Rural", "Urbana")                      # Clasificación por zona
)
votos_por_zona <- election_data |> summarise(votos=sum(votos), .by = c(zona,siglas))
votos_por_zona2 <- votos_por_zona |> pivot_wider(names_from = zona, values_from = votos) |> mutate(rural=(Rural/sum(Rural))*100, urbana=(Urbana/sum(Urbana))*100, dif_perc=rural-urbana)
wilcox.test(votos_por_zona2$rural, votos_por_zona2$urbana, paired = TRUE)
#UN gráfico para verlo, aunque no hay muchas diferencias
library(forcats)
# Suponiendo que tienes el dataframe 'votos_por_zona2' con las variables 'siglas' y 'dif_perc'
ggplot(votos_por_zona2) +
geom_col(aes(x = fct_reorder(siglas, dif_perc), y = dif_perc)) +  # Colorear las barras
scale_y_continuous(limits = c(-100, 100)) +  # Escala en el eje y de -100 a 100
scale_fill_manual(values= c(CS = "orange", UP = "purple", VOX = "green",OTROS="grey",MP="#009975",BNG="#6AADE4",PNV="#086522","CONVERGÈNCIA I UNIÓ"="#FFDFC4",ERC="yellow",BILDU="#30D5C8",PSOE="red", PP="blue"))
library(dplyr)
library(glue)
library(lubridate)
# Seleccionar el partido ganador por municipio y clasificar por zona
election_data <- election_data |>
mutate(
zona = if_else(censo <= 2500, "Rural", "Urbana")                      # Clasificación por zona
)
votos_por_zona <- election_data |> summarise(votos=sum(votos), .by = c(zona,siglas))
votos_por_zona2 <- votos_por_zona |> pivot_wider(names_from = zona, values_from = votos) |> mutate(rural=(Rural/sum(Rural))*100, urbana=(Urbana/sum(Urbana))*100, dif_perc=rural-urbana)
wilcox.test(votos_por_zona2$rural, votos_por_zona2$urbana, paired = TRUE)
#UN gráfico para verlo, aunque no hay muchas diferencias
library(forcats)
# Suponiendo que tienes el dataframe 'votos_por_zona2' con las variables 'siglas' y 'dif_perc'
ggplot(votos_por_zona2) +
geom_col(aes(x = fct_reorder(siglas, dif_perc), y = dif_perc)) +  # Colorear las barras
scale_y_continuous(limits = c(-3, 4)) +  # Escala en el eje y de -100 a 100
scale_fill_manual(values= c(CS = "orange", UP = "purple", VOX = "green",OTROS="grey",MP="#009975",BNG="#6AADE4",PNV="#086522","CONVERGÈNCIA I UNIÓ"="#FFDFC4",ERC="yellow",BILDU="#30D5C8",PSOE="red", PP="blue"))
library(dplyr)
library(glue)
library(lubridate)
# Seleccionar el partido ganador por municipio y clasificar por zona
election_data <- election_data |>
mutate(
zona = if_else(censo <= 2500, "Rural", "Urbana")                      # Clasificación por zona
)
votos_por_zona <- election_data |> summarise(votos=sum(votos), .by = c(zona,siglas))
votos_por_zona2 <- votos_por_zona |> pivot_wider(names_from = zona, values_from = votos) |> mutate(rural=(Rural/sum(Rural))*100, urbana=(Urbana/sum(Urbana))*100, dif_perc=rural-urbana)
wilcox.test(votos_por_zona2$rural, votos_por_zona2$urbana, paired = TRUE)
#UN gráfico para verlo, aunque no hay muchas diferencias
library(forcats)
# Suponiendo que tienes el dataframe 'votos_por_zona2' con las variables 'siglas' y 'dif_perc'
ggplot(votos_por_zona2) +
geom_col(aes(x = fct_reorder(siglas, dif_perc), y = dif_perc,fill=siglas)) +  # Colorear las barras
scale_y_continuous(limits = c(-3, 4)) +  # Escala en el eje y de -100 a 100
scale_fill_manual(values= c(CS = "orange", UP = "purple", VOX = "green",OTROS="grey",MP="#009975",BNG="#6AADE4",PNV="#086522","CONVERGÈNCIA I UNIÓ"="#FFDFC4",ERC="yellow",BILDU="#30D5C8",PSOE="red", PP="blue"))
library(dplyr)
library(glue)
library(lubridate)
# Seleccionar el partido ganador por municipio y clasificar por zona
election_data <- election_data |>
mutate(
zona = if_else(censo <= 2500, "Rural", "Urbana")                      # Clasificación por zona
)
votos_por_zona <- election_data |> summarise(votos=sum(votos), .by = c(zona,siglas))
votos_por_zona2 <- votos_por_zona |> pivot_wider(names_from = zona, values_from = votos) |> mutate(rural=(Rural/sum(Rural))*100, urbana=(Urbana/sum(Urbana))*100, dif_perc=rural-urbana)
wilcox.test(votos_por_zona2$rural, votos_por_zona2$urbana, paired = TRUE)
#UN gráfico para verlo, aunque no hay muchas diferencias
library(forcats)
# Suponiendo que tienes el dataframe 'votos_por_zona2' con las variables 'siglas' y 'dif_perc'
ggplot(votos_por_zona2) +
geom_col(aes(x = fct_reorder(siglas, dif_perc), y = dif_perc,fill=siglas)) +  # Colorear las barras
scale_y_continuous(limits = c(-50, 50)) +  # Escala en el eje y de -100 a 100
scale_fill_manual(values= c(CS = "orange", UP = "purple", VOX = "green",OTROS="grey",MP="#009975",BNG="#6AADE4",PNV="#086522","CONVERGÈNCIA I UNIÓ"="#FFDFC4",ERC="yellow",BILDU="#30D5C8",PSOE="red", PP="blue"))
library(dplyr)
library(glue)
library(lubridate)
# Seleccionar el partido ganador por municipio y clasificar por zona
election_data <- election_data |>
mutate(
zona = if_else(censo <= 2500, "Rural", "Urbana")                      # Clasificación por zona
)
votos_por_zona <- election_data |> summarise(votos=sum(votos), .by = c(zona,siglas))
votos_por_zona2 <- votos_por_zona |> pivot_wider(names_from = zona, values_from = votos) |> mutate(rural=(Rural/sum(Rural))*100, urbana=(Urbana/sum(Urbana))*100, dif_perc=rural-urbana)
wilcox.test(votos_por_zona2$rural, votos_por_zona2$urbana, paired = TRUE)
#UN gráfico para verlo, aunque no hay muchas diferencias
library(forcats)
ggplot(votos_por_zona2) +
geom_col(aes(x = fct_reorder(siglas, dif_perc), y = dif_perc,fill=siglas)) +  # Colorear las barras
scale_y_continuous(limits = c(-50, 50)) +  # Escala en el eje y de -100 a 100
scale_fill_manual(values= c(CS = "orange", UP = "purple", VOX = "green",OTROS="grey",MP="#009975",BNG="#6AADE4",PNV="#086522","CONVERGÈNCIA I UNIÓ"="#FFDFC4",ERC="yellow",BILDU="#30D5C8",PSOE="red", PP="blue"))
ggplot(votos_por_zona2) +
geom_boxplot(aes(x = fct_reorder(siglas, dif_perc), y = dif_perc, fill = siglas)) +  # Crear boxplot
scale_y_continuous(limits = c(-50, 50)) +  # Escala en el eje Y de -50 a 50
scale_fill_manual(values = c(  # Colores para las diferentes categorías de 'siglas'
"CS" = "orange",
"UP" = "purple",
"VOX" = "green",
"OTROS" = "grey",
"MP" = "#009975",
"BNG" = "#6AADE4",
"PNV" = "#086522",
"CONVERGÈNCIA I UNIÓ" = "#FFDFC4",
"ERC" = "yellow",
"BILDU" = "#30D5C8",
"PSOE" = "red",
"PP" = "blue"
)) +  # Asignar colores manualmente
labs(title = "Distribución de Diferencia porcentual por zona", x = "Siglas", y = "Diferencia porcentual") +
theme_minimal() +  # Estilo minimalista
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar los labels del eje X si es necesario
library(dplyr)
library(glue)
library(lubridate)
# Seleccionar el partido ganador por municipio y clasificar por zona
election_data <- election_data |>
mutate(
zona = if_else(censo <= 2500, "Rural", "Urbana")                      # Clasificación por zona
)
votos_por_zona <- election_data |> summarise(votos=sum(votos), .by = c(zona,siglas))
votos_por_zona2 <- votos_por_zona |> pivot_wider(names_from = zona, values_from = votos) |> mutate(rural=(Rural/sum(Rural))*100, urbana=(Urbana/sum(Urbana))*100, dif_perc=rural-urbana)
wilcox.test(votos_por_zona2$rural, votos_por_zona2$urbana, paired = TRUE)
#UN gráfico para verlo, aunque no hay muchas diferencias
library(forcats)
ggplot(votos_por_zona2) +
geom_col(aes(x = fct_reorder(siglas, dif_perc), y = dif_perc,fill=siglas)) +  # Colorear las barras
scale_y_continuous(limits = c(-50, 50)) +  # Escala en el eje y de -100 a 100
scale_fill_manual(values= c(CS = "orange", UP = "purple", VOX = "green",OTROS="grey",MP="#009975",BNG="#6AADE4",PNV="#086522","CONVERGÈNCIA I UNIÓ"="#FFDFC4",ERC="yellow",BILDU="#30D5C8",PSOE="red", PP="blue"))
ggplot(votos_por_zona2) +
geom_boxplot(aes(x = "", y = dif_perc, fill = siglas),
outlier.shape = 16, outlier.size = 2) +  # Caja y bigote con outliers
scale_y_continuous(limits = c(-50, 50)) +  # Escala en el eje Y de -50 a 50
scale_fill_manual(values = c(  # Asignar colores manuales para las siglas
"CS" = "orange",
"UP" = "purple",
"VOX" = "green",
"OTROS" = "grey",
"MP" = "#009975",
"BNG" = "#6AADE4",
"PNV" = "#086522",
"CONVERGÈNCIA I UNIÓ" = "#FFDFC4",
"ERC" = "yellow",
"BILDU" = "#30D5C8",
"PSOE" = "red",
"PP" = "blue"
)) +  # Colores para las siglas
labs(title = "Distribución de Diferencia porcentual", x = "Categorías", y = "Diferencia porcentual") +
theme_minimal() +  # Estilo minimalista
theme(axis.text.x = element_blank())  # Eliminar etiquetas del eje X
library(dplyr)
library(glue)
library(lubridate)
# Seleccionar el partido ganador por municipio y clasificar por zona
election_data <- election_data |>
mutate(
zona = if_else(censo <= 2500, "Rural", "Urbana")                      # Clasificación por zona
)
votos_por_zona <- election_data |> summarise(votos=sum(votos), .by = c(zona,siglas))
votos_por_zona2 <- votos_por_zona |> pivot_wider(names_from = zona, values_from = votos) |> mutate(rural=(Rural/sum(Rural))*100, urbana=(Urbana/sum(Urbana))*100, dif_perc=rural-urbana)
wilcox.test(votos_por_zona2$rural, votos_por_zona2$urbana, paired = TRUE)
#UN gráfico para verlo, aunque no hay muchas diferencias
library(forcats)
ggplot(votos_por_zona2) +
geom_col(aes(x = fct_reorder(siglas, dif_perc), y = dif_perc,fill=siglas)) +  # Colorear las barras
scale_y_continuous(limits = c(-50, 50)) +  # Escala en el eje y de -100 a 100
scale_fill_manual(values= c(CS = "orange", UP = "purple", VOX = "green",OTROS="grey",MP="#009975",BNG="#6AADE4",PNV="#086522","CONVERGÈNCIA I UNIÓ"="#FFDFC4",ERC="yellow",BILDU="#30D5C8",PSOE="red", PP="blue"))
ggplot(votos_por_zona2) +
geom_boxplot(aes(x = "", y = dif_perc, fill = siglas),
outlier.shape = 16, outlier.size = 2) +  # Caja y bigote con outliers
scale_y_continuous(limits = c(-4, 4)) +  # Escala en el eje Y de -50 a 50
scale_fill_manual(values = c(  # Asignar colores manuales para las siglas
"CS" = "orange",
"UP" = "purple",
"VOX" = "green",
"OTROS" = "grey",
"MP" = "#009975",
"BNG" = "#6AADE4",
"PNV" = "#086522",
"CONVERGÈNCIA I UNIÓ" = "#FFDFC4",
"ERC" = "yellow",
"BILDU" = "#30D5C8",
"PSOE" = "red",
"PP" = "blue"
)) +  # Colores para las siglas
labs(title = "Distribución de Diferencia porcentual", x = "Categorías", y = "Diferencia porcentual") +
theme_minimal() +  # Estilo minimalista
theme(axis.text.x = element_blank())  # Eliminar etiquetas del eje X
library(dplyr)
library(glue)
library(lubridate)
# Seleccionar el partido ganador por municipio y clasificar por zona
election_data <- election_data |>
mutate(
zona = if_else(censo <= 2500, "Rural", "Urbana")                      # Clasificación por zona
)
votos_por_zona <- election_data |> summarise(votos=sum(votos), .by = c(zona,siglas))
votos_por_zona2 <- votos_por_zona |> pivot_wider(names_from = zona, values_from = votos) |> mutate(rural=(Rural/sum(Rural))*100, urbana=(Urbana/sum(Urbana))*100, dif_perc=rural-urbana)
wilcox.test(votos_por_zona2$rural, votos_por_zona2$urbana, paired = TRUE)
#UN gráfico para verlo, aunque no hay muchas diferencias
library(forcats)
ggplot(votos_por_zona2) +
geom_col(aes(x = fct_reorder(siglas, dif_perc), y = dif_perc,fill=siglas)) +  # Colorear las barras
scale_y_continuous(limits = c(-50, 50)) +  # Escala en el eje y de -100 a 100
scale_fill_manual(values= c(CS = "orange", UP = "purple", VOX = "green",OTROS="grey",MP="#009975",BNG="#6AADE4",PNV="#086522","CONVERGÈNCIA I UNIÓ"="#FFDFC4",ERC="yellow",BILDU="#30D5C8",PSOE="red", PP="blue"))
ggplot(votos_por_zona2) +
geom_boxplot(aes(x = siglas, y = dif_perc, fill = siglas),  # Mapeo correcto
outlier.shape = 16, outlier.size = 2, outlier.colour = "black") +  # Puntos de outliers
scale_y_continuous(limits = c(-50, 50)) +  # Escala en el eje Y de -50 a 50
scale_fill_manual(values = c(  # Colores para las siglas
"CS" = "orange",
"UP" = "purple",
"VOX" = "green",
"OTROS" = "grey",
"MP" = "#009975",
"BNG" = "#6AADE4",
"PNV" = "#086522",
"CONVERGÈNCIA I UNIÓ" = "#FFDFC4",
"ERC" = "yellow",
"BILDU" = "#30D5C8",
"PSOE" = "red",
"PP" = "blue"
)) +  # Asignar colores a las siglas
labs(title = "Distribución de Diferencia porcentual por zona", x = "Siglas", y = "Diferencia porcentual") +
theme_minimal() +  # Estilo minimalista
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar los labels del eje X
library(dplyr)
library(glue)
library(lubridate)
# Seleccionar el partido ganador por municipio y clasificar por zona
election_data <- election_data |>
mutate(
zona = if_else(censo <= 2500, "Rural", "Urbana")                      # Clasificación por zona
)
votos_por_zona <- election_data |> summarise(votos=sum(votos), .by = c(zona,siglas))
votos_por_zona2 <- votos_por_zona |> pivot_wider(names_from = zona, values_from = votos) |> mutate(rural=(Rural/sum(Rural))*100, urbana=(Urbana/sum(Urbana))*100, dif_perc=rural-urbana)
wilcox.test(votos_por_zona2$rural, votos_por_zona2$urbana, paired = TRUE)
#UN gráfico para verlo, aunque no hay muchas diferencias
library(forcats)
ggplot(votos_por_zona2) +
geom_col(aes(x = fct_reorder(siglas, dif_perc), y = dif_perc,fill=siglas)) +  # Colorear las barras
scale_y_continuous(limits = c(-50, 50)) +  # Escala en el eje y de -100 a 100
scale_fill_manual(values= c(CS = "orange", UP = "purple", VOX = "green",OTROS="grey",MP="#009975",BNG="#6AADE4",PNV="#086522","CONVERGÈNCIA I UNIÓ"="#FFDFC4",ERC="yellow",BILDU="#30D5C8",PSOE="red", PP="blue"))
ggplot(votos_por_zona2) +
geom_boxplot(aes( y = dif_perc, fill = siglas),  # Mapeo correcto
outlier.shape = 16, outlier.size = 2, outlier.colour = "black") +  # Puntos de outliers
scale_y_continuous(limits = c(-50, 50)) +  # Escala en el eje Y de -50 a 50
scale_fill_manual(values = c(  # Colores para las siglas
"CS" = "orange",
"UP" = "purple",
"VOX" = "green",
"OTROS" = "grey",
"MP" = "#009975",
"BNG" = "#6AADE4",
"PNV" = "#086522",
"CONVERGÈNCIA I UNIÓ" = "#FFDFC4",
"ERC" = "yellow",
"BILDU" = "#30D5C8",
"PSOE" = "red",
"PP" = "blue"
)) +  # Asignar colores a las siglas
labs(title = "Distribución de Diferencia porcentual por zona", x = "Siglas", y = "Diferencia porcentual") +
theme_minimal() +  # Estilo minimalista
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotar los labels del eje X
library(dplyr)
library(glue)
library(lubridate)
# Seleccionar el partido ganador por municipio y clasificar por zona
election_data <- election_data |>
mutate(
zona = if_else(censo <= 2500, "Rural", "Urbana")                      # Clasificación por zona
)
votos_por_zona <- election_data |> summarise(votos=sum(votos), .by = c(zona,siglas))
votos_por_zona2 <- votos_por_zona |> pivot_wider(names_from = zona, values_from = votos) |> mutate(rural=(Rural/sum(Rural))*100, urbana=(Urbana/sum(Urbana))*100, dif_perc=rural-urbana)
wilcox.test(votos_por_zona2$rural, votos_por_zona2$urbana, paired = TRUE)
#UN gráfico para verlo, aunque no hay muchas diferencias
library(forcats)
ggplot(votos_por_zona2) +
geom_col(aes(x = fct_reorder(siglas, dif_perc), y = dif_perc,fill=siglas)) +  # Colorear las barras
scale_y_continuous(limits = c(-50, 50)) +  # Escala en el eje y de -100 a 100
scale_fill_manual(values= c(CS = "orange", UP = "purple", VOX = "green",OTROS="grey",MP="#009975",BNG="#6AADE4",PNV="#086522","CONVERGÈNCIA I UNIÓ"="#FFDFC4",ERC="yellow",BILDU="#30D5C8",PSOE="red", PP="blue"))
ggplot(votos_por_zona2) +
geom_boxplot(aes(y = dif_perc, fill = siglas)) +  # Cajas y bigotes para la diferencia porcentual
scale_y_continuous(limits = c(-50, 50)) +  # Ajustar los límites del eje Y
scale_fill_manual(values = c(  # Colores personalizados para cada sigla
"CS" = "orange",
"UP" = "purple",
"VOX" = "green",
"OTROS" = "grey",
"MP" = "#009975",
"BNG" = "#6AADE4",
"PNV" = "#086522",
"CONVERGÈNCIA I UNIÓ" = "#FFDFC4",
"ERC" = "yellow",
"BILDU" = "#30D5C8",
"PSOE" = "red",
"PP" = "blue"
)) +  # Asignar colores a las siglas
labs(title = "Distribución de Diferencia porcentual por zona", y = "Diferencia porcentual") +
theme_minimal() +  # Estilo minimalista
theme(
axis.text.x = element_blank(),  # Eliminar texto en el eje X
axis.ticks.x = element_blank(),  # Eliminar las marcas del eje X
axis.title.x = element_blank()  # Eliminar título del eje X
)
library(dplyr)
library(glue)
library(lubridate)
# Seleccionar el partido ganador por municipio y clasificar por zona
election_data <- election_data |>
mutate(
zona = if_else(censo <= 2500, "Rural", "Urbana")                      # Clasificación por zona
)
votos_por_zona <- election_data |> summarise(votos=sum(votos), .by = c(zona,siglas))
votos_por_zona2 <- votos_por_zona |> pivot_wider(names_from = zona, values_from = votos) |> mutate(rural=(Rural/sum(Rural))*100, urbana=(Urbana/sum(Urbana))*100, dif_perc=rural-urbana)
wilcox.test(votos_por_zona2$rural, votos_por_zona2$urbana, paired = TRUE)
#UN gráfico para verlo, aunque no hay muchas diferencias
library(forcats)
ggplot(votos_por_zona2) +
geom_col(aes(x = fct_reorder(siglas, dif_perc), y = dif_perc,fill=siglas)) +  # Colorear las barras
scale_y_continuous(limits = c(-50, 50)) +  # Escala en el eje y de -100 a 100
scale_fill_manual(values= c(CS = "orange", UP = "purple", VOX = "green",OTROS="grey",MP="#009975",BNG="#6AADE4",PNV="#086522","CONVERGÈNCIA I UNIÓ"="#FFDFC4",ERC="yellow",BILDU="#30D5C8",PSOE="red", PP="blue"))
ggplot(votos_por_zona2) +
geom_boxplot(aes(y = dif_perc, fill = "blue")) +  # Una sola caja para toda la variable
scale_y_continuous(limits = c(-50, 50)) +  # Ajuste de los límites del eje Y
scale_fill_manual(values = c("blue")) +  # Un solo color para toda la caja
labs(title = "Distribución de Diferencia porcentual", y = "Diferencia porcentual") +
theme_minimal() +  # Estilo minimalista
theme(
axis.text.x = element_blank(),  # Eliminar el eje X
axis.ticks.x = element_blank(),  # Eliminar las marcas del eje X
axis.title.x = element_blank(),  # Eliminar el título del eje X
axis.line.x = element_blank()   # Eliminar la línea del eje X
)
library(dplyr)
library(glue)
library(lubridate)
# Seleccionar el partido ganador por municipio y clasificar por zona
election_data <- election_data |>
mutate(
zona = if_else(censo <= 2500, "Rural", "Urbana")                      # Clasificación por zona
)
votos_por_zona <- election_data |> summarise(votos=sum(votos), .by = c(zona,siglas))
votos_por_zona2 <- votos_por_zona |> pivot_wider(names_from = zona, values_from = votos) |> mutate(rural=(Rural/sum(Rural))*100, urbana=(Urbana/sum(Urbana))*100, dif_perc=rural-urbana)
wilcox.test(votos_por_zona2$rural, votos_por_zona2$urbana, paired = TRUE)
#UN gráfico para verlo, aunque no hay muchas diferencias
library(forcats)
ggplot(votos_por_zona2) +
geom_col(aes(x = fct_reorder(siglas, dif_perc), y = dif_perc,fill=siglas)) +  # Colorear las barras
scale_y_continuous(limits = c(-50, 50)) +  # Escala en el eje y de -100 a 100
scale_fill_manual(values= c(CS = "orange", UP = "purple", VOX = "green",OTROS="grey",MP="#009975",BNG="#6AADE4",PNV="#086522","CONVERGÈNCIA I UNIÓ"="#FFDFC4",ERC="yellow",BILDU="#30D5C8",PSOE="red", PP="blue"))
ggplot(votos_por_zona2) +
geom_boxplot(aes(y = dif_perc, fill = "blue")) +  # Caja para toda la variable
geom_jitter(aes(y = dif_perc, color = siglas), width = 0.2) +  # Puntos de los outliers con siglas
scale_y_continuous(limits = c(-50, 50)) +  # Ajustar los límites del eje Y
scale_fill_manual(values = c("blue")) +  # Un solo color para la caja
scale_color_manual(values = c(  # Colores para los puntos de cada sigla
"CS" = "orange",
"UP" = "purple",
"VOX" = "green",
"OTROS" = "grey",
"MP" = "#009975",
"BNG" = "#6AADE4",
"PNV" = "#086522",
"CONVERGÈNCIA I UNIÓ" = "#FFDFC4",
"ERC" = "yellow",
"BILDU" = "#30D5C8",
"PSOE" = "red",
"PP" = "blue"
)) +
labs(title = "Distribución de Diferencia porcentual", y = "Diferencia porcentual") +
theme_minimal() +  # Estilo minimalista
theme(
axis.text.x = element_blank(),  # Eliminar el eje X
axis.ticks.x = element_blank(),  # Eliminar las marcas del eje X
axis.title.x = element_blank(),  # Eliminar el título del eje X
axis.line.x = element_blank()   # Eliminar la línea del eje X
)
library(dplyr)
library(glue)
library(lubridate)
# Seleccionar el partido ganador por municipio y clasificar por zona
election_data <- election_data |>
mutate(
zona = if_else(censo <= 2500, "Rural", "Urbana")                      # Clasificación por zona
)
votos_por_zona <- election_data |> summarise(votos=sum(votos), .by = c(zona,siglas))
votos_por_zona2 <- votos_por_zona |> pivot_wider(names_from = zona, values_from = votos) |> mutate(rural=(Rural/sum(Rural))*100, urbana=(Urbana/sum(Urbana))*100, dif_perc=rural-urbana)
wilcox.test(votos_por_zona2$rural, votos_por_zona2$urbana, paired = TRUE)
#UN gráfico para verlo, aunque no hay muchas diferencias
library(forcats)
ggplot(votos_por_zona2) +
geom_col(aes(x = fct_reorder(siglas, dif_perc), y = dif_perc,fill=siglas)) +  # Colorear las barras
scale_y_continuous(limits = c(-50, 50)) +  # Escala en el eje y de -100 a 100
scale_fill_manual(values= c(CS = "orange", UP = "purple", VOX = "green",OTROS="grey",MP="#009975",BNG="#6AADE4",PNV="#086522","CONVERGÈNCIA I UNIÓ"="#FFDFC4",ERC="yellow",BILDU="#30D5C8",PSOE="red", PP="blue"))
ggplot(votos_por_zona2) +
geom_boxplot(aes(y = dif_perc, fill = "blue")) +  # Caja para toda la variable
geom_jitter(aes(y = dif_perc, color = siglas), width = 0.2) +  # Puntos de los outliers con siglas
scale_y_continuous(limits = c(-50, 50)) +  # Ajustar los límites del eje Y
scale_fill_manual(values = c("blue")) +  # Un solo color para la caja
scale_color_manual(values = c(  # Colores para los puntos de cada sigla
"CS" = "orange",
"UP" = "purple",
"VOX" = "green",
"OTROS" = "grey",
"MP" = "#009975",
"BNG" = "#6AADE4",
"PNV" = "#086522",
"CONVERGÈNCIA I UNIÓ" = "#FFDFC4",
"ERC" = "yellow",
"BILDU" = "#30D5C8",
"PSOE" = "red",
"PP" = "blue"
))
library(dplyr)
library(glue)
library(lubridate)
# Seleccionar el partido ganador por municipio y clasificar por zona
election_data <- election_data |>
mutate(
zona = if_else(censo <= 2500, "Rural", "Urbana")                      # Clasificación por zona
)
votos_por_zona <- election_data |> summarise(votos=sum(votos), .by = c(zona,siglas))
votos_por_zona2 <- votos_por_zona |> pivot_wider(names_from = zona, values_from = votos) |> mutate(rural=(Rural/sum(Rural))*100, urbana=(Urbana/sum(Urbana))*100, dif_perc=rural-urbana)
wilcox.test(votos_por_zona2$rural, votos_por_zona2$urbana, paired = TRUE)
#UN gráfico para verlo, aunque no hay muchas diferencias
library(forcats)
ggplot(votos_por_zona2) +
geom_col(aes(x = fct_reorder(siglas, dif_perc), y = dif_perc,fill=siglas)) +  # Colorear las barras
scale_y_continuous(limits = c(-50, 50)) +  # Escala en el eje y de -100 a 100
scale_fill_manual(values= c(CS = "orange", UP = "purple", VOX = "green",OTROS="grey",MP="#009975",BNG="#6AADE4",PNV="#086522","CONVERGÈNCIA I UNIÓ"="#FFDFC4",ERC="yellow",BILDU="#30D5C8",PSOE="red", PP="blue"))
ggplot(votos_por_zona2) +
geom_boxplot(aes(y = dif_perc, fill = "blue")) +  # Una sola caja para toda la variable
scale_y_continuous(limits = c(-4, 4)) +  # Ajuste de los límites del eje Y
scale_fill_manual(values = c("blue")) +  # Un solo color para toda la caja
labs(title = "Distribución de Diferencia porcentual", y = "Diferencia porcentual") +
theme_minimal() +  # Estilo minimalista
theme(
axis.text.x = element_blank(),  # Eliminar el eje X
axis.ticks.x = element_blank(),  # Eliminar las marcas del eje X
axis.title.x = element_blank(),  # Eliminar el título del eje X
axis.line.x = element_blank()   # Eliminar la línea del eje X
)

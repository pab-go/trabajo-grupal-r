Q1 <- quantile(datos[[col]], 0.25)
Q3 <- quantile(datos[[col]], 0.75)
IQR <- Q3 - Q1
lim_inf <- Q1 - (IQR * 1.5)
lim_sup <- Q3 + (IQR * 31.5)
datos <- datos |>
filter(censo >= lim_inf & censo <= lim_sup)
return(datos)
}
election_data_rcs <- calcular_limites(election_data_rcs, "censo")
# HAGO UN CONTRASTE NO PARAMETRICO CON LA HIPÓTESIS NULA DE INDEPENDENCIA
cor.test(election_data_rcs$participacion, election_data_rcs$censo, method = "kendall")
cor.test(election_data_rcs$participacion, election_data_rcs$censo, method = "spearman")
##GRAFICO RELACION CENSO Y VOTO PARA VER LO CONTRASTADO
ggplot(election_data_rcs, aes(x = censo, y = participacion)) +
geom_point(aes(color = participacion), size = 3, alpha = 0.7) +  # Puntos de dispersión
geom_smooth(method = "lm", color = "black", se = TRUE, linetype = "dashed") +  # Línea de regresión
scale_color_gradient(low = "#C0FF3E", high = "olivedrab", name = "Participación (%)")+
labs(
title = "Relación entre Censo y Participación",
x = "Censo",
y = "Participación (%)"
) +
theme_minimal(base_size = 14) +  # Tema minimalista
theme(
plot.title = element_text(face = "bold", size = 20,vjust = 0.6),  # Personalización del título
plot.subtitle = element_text(size = 9),
axis.title = element_text(size = 14, face = "bold"),
legend.position = "right",
legend.text = element_text(size = 10), # Tamaño del texto de la escala
legend.title = element_text(size = 12),
panel.background = element_rect(fill = "grey95"),
)
# Seleccionar el partido ganador por municipio y clasificar por zona
election_data <- election_data |>
mutate(
zona = if_else(censo <= 10000, "Rural", "Urbana")
)
votos_por_zona <- election_data |> summarise(votos=sum(votos), .by = c(zona,siglas))
votos_por_zona2 <- votos_por_zona |> pivot_wider(names_from = zona, values_from = votos) |> mutate(rural=(Rural/sum(Rural))*100, urbana=(Urbana/sum(Urbana))*100, dif_perc=rural-urbana)
#TEst de wilcoxon-MAnWhitney
wilcox.test(votos_por_zona2$rural, votos_por_zona2$urbana, paired = TRUE)
#UN gráfico para ver los cambios
barras_rural <- ggplot(votos_por_zona2) +
geom_col(aes(x = fct_reorder(siglas, dif_perc), y= dif_perc,fill=siglas)) +
scale_y_continuous(limits = c(-6, 6)) +
scale_fill_manual(values= c(CS = "orange",
UP = "purple",
VOX = "green",
OTROS="grey",
MP="#009975",
BNG="#6AADE4",
PNV="#086522",
"CONVERGÈNCIA I UNIÓ"="#FFDFC4",
ERC="yellow",
BILDU="#30D5C8",
PSOE="red",
PP="blue"))+
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank(),
legend.position = "none",
plot.title = element_markdown(
family = "Econ Sans Cnd",
size = 15))+
labs(title = "Diferencia en porcentaje en zonas rurales y urbanas y anómalos",y="diferencia")
#GRAFICO CAJAS Y BIGOTES PARA LOS ANOMALOS
bigotes_rural <-ggplot(votos_por_zona2) +
geom_boxplot(aes(y = dif_perc, fill = "#CDAA7D"), width = 0.4) +  # Una sola caja para toda la variable
scale_y_continuous(limits = c(-5, 5)) +  # Ajuste de los límites del eje Y
theme(
axis.text.x = element_blank(),  # Eliminar el eje X
axis.ticks.x = element_blank(),  # Eliminar las marcas del eje X
axis.title.x = element_blank(),  # Eliminar el título del eje X
axis.line.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "none",
)
barras_rural+bigotes_rural+
plot_layout(ncol = 2, widths = c(2.75, 1.25))
# Creamos una variable en election_data y en surveys que sea la fecha de las elecciones sin el día
election_data <- election_data |>
mutate(fecha_año_mes = format(fecha, "%Y-%m"))
surveys <- surveys |>
mutate(fecha_año_mes = format(date_elec, "%Y-%m"))
# Calcular el total de votos por partido y el total de votantes por fecha
resultados_votos <- election_data |>
group_by(fecha_año_mes) |>
mutate(total_votantes = sum(votos, na.rm = TRUE)) |>   # Calcular total de votantes por fecha
ungroup() |>
group_by(fecha_año_mes, siglas) |>
summarize(
total_votos = sum(votos, na.rm = TRUE),  # Total de votos por partido
total_votantes = first(total_votantes),  # Total de votantes por fecha
.groups = "drop"
)
# Unir las tablas surveys y election_data por las columnas fecha_año_mes y partido/siglas
elecciones_encuestas <- surveys |>
inner_join(resultados_votos, by = c("fecha_año_mes" = "fecha_año_mes", "partido" = "siglas"))
# Calcular el error absoluto
elecciones_encuestas <- elecciones_encuestas |>
mutate(error_absoluto = abs(total_votos - puntuacion * total_votantes / 100))
# Agrupar por pollster y sumar el error absoluto
pollster_error <- elecciones_encuestas |>
group_by(id_pollster, pollster) |>
summarize(total_error = sum(error_absoluto, na.rm = TRUE), .groups = "drop") |> ungroup()
# Encontrar el pollster con el menor error
pollster_min_error <- pollster_error |>
filter(total_error == min(total_error))
# Encontrar el pollster con el mayor error
pollster_max_error <- pollster_error |>
filter(total_error == max(total_error))
#PAso 1: Porcentaje de votos a cada partido por elección
election_data <- election_data |> mutate("participacion" = (votos_candidaturas + votos_blancos + votos_nulos))
participacion2 <- election_data |>
group_by(fecha, id_mun) |>  # Agrupar por elección y municipio
slice(1)|>
ungroup() |>
summarise(partic_por_elec=sum(participacion), .by = fecha)
# Paso 2: Agrupar votos por grupo y calcular el porcentaje
resultados_porcentajes <- election_data |>
mutate(
Grupo = case_when(
str_detect(siglas, "PSOE|PP") ~ "PARTIDO TRADICIONAL",
str_detect(siglas, "CS|UP|MP|VOX") ~ "PARTIDO NUEVO",
str_detect(siglas, "PNV|BNG|ERC|BILDU|CONVERGÈNCIA I UNIÓ") ~ "NACIONALISTA/REGIONALISTA",
TRUE ~ "OTROS"
)
)
resultados_porcentajes <- resultados_porcentajes |> summarise(n_votos = sum(votos), by = c(fecha,Grupo)) |>
left_join(participacion2, by = "fecha")|>  # Añadir el censo total por elección
mutate(
porcentaje = (n_votos / partic_por_elec) * 100  # Calcular porcentaje sobre el censo total
)
#PAso 1: Porcentaje de votos a cada partido por elección
election_data <- election_data |> mutate("participacion" = (votos_candidaturas + votos_blancos + votos_nulos))
participacion2 <- election_data |>
group_by(fecha, id_mun) |>  # Agrupar por elección y municipio
slice(1)|>
ungroup() |>
summarise(partic_por_elec=sum(participacion), .by = fecha)
# Paso 2: Agrupar votos por grupo y calcular el porcentaje
resultados_porcentajes <- election_data |>
mutate(
Grupo = case_when(
str_detect(siglas, "PSOE|PP") ~ "PARTIDO TRADICIONAL",
str_detect(siglas, "CS|UP|MP|VOX") ~ "PARTIDO NUEVO",
str_detect(siglas, "PNV|BNG|ERC|BILDU|CONVERGÈNCIA I UNIÓ") ~ "NACIONALISTA/REGIONALISTA",
TRUE ~ "OTROS"
)
)
resultados_porcentajes <- resultados_porcentajes |> summarise(n_votos = sum(votos), .by = c(fecha,Grupo)) |>
left_join(participacion2, by = "fecha")|>  # Añadir el censo total por elección
mutate(
porcentaje = (n_votos / partic_por_elec) * 100  # Calcular porcentaje sobre el censo total
)
plt1 <- ggplot(resultados_porcentajes, aes(fecha, porcentaje)) +
geom_line(aes(color = Grupo,size= 1.2)) +
geom_point(aes(fill = Grupo),  size = 5, pch = 21, #pch te permite tener color y borde, son ese tipo de puntos
color = "white",
stroke = 1 #el ancho del borde
) +
scale_color_manual(values = c("#076FA1", "#2FC1D3", "#AD8C97","#C7C9CB")) +
scale_fill_manual(values = c("#076FA1", "#2FC1D3", "#AD8C97","#C7C9CB")) +
scale_x_date(
breaks = unique(resultados_porcentajes$fecha),   # Usar solo las fechas específicas
date_labels = "%Y-%b"
) +
scale_y_continuous(
breaks = seq(0, 100, by = 5),  # Intervalos de 5 unidades en el eje Y
limits = c(0, 100))+
theme_minimal()+
theme(legend.position = "right")+
theme(
panel.background = element_rect(fill = "grey95"),#Colores de fondo para el panel y el gráfico
plot.background = element_rect(fill = "grey95"),
panel.grid = element_blank(), #Quitar las cuadrículas
panel.grid.major.y = element_line(color = "#A8BAC4", size = 0.2), #Añadirlas de nuevo al eje y
axis.ticks.length.y = unit(0, "mm"), #Quitar las marcas del eje y
axis.ticks.length.x = unit(2, "mm"), #Dejarlas muy pequeñas en el eje x
axis.title = element_text(size = 14, face = "bold"), # Estilo de títulos de los ejes,
axis.line.x.bottom = element_line(color = "black"), #línea de abajo negra
axis.text.y = element_text(family = "Econ Sans Cnd", size = 10), #customizar los ejes
axis.text.x = element_text(family = "Econ Sans Cnd", size = 10,angle = 37,margin = margin(1.75, 0,0,0,"mm")),
plot.title = element_markdown(family = "Econ Sans Cnd", size = 15,face = "bold")
)+
guides(size = "none")
plt1
#PAso 1: Porcentaje de votos a cada partido por elección
election_data <- election_data |> mutate("participacion" = (votos_candidaturas + votos_blancos + votos_nulos))
participacion2 <- election_data |>
group_by(fecha, id_mun) |>  # Agrupar por elección y municipio
slice(1)|>
ungroup() |>
summarise(partic_por_elec=sum(participacion), .by = fecha)
# Paso 2: Agrupar votos por grupo y calcular el porcentaje
resultados_porcentajes <- election_data |>
mutate(
Grupo = case_when(
str_detect(siglas, "PSOE|PP") ~ "PARTIDO TRADICIONAL",
str_detect(siglas, "CS|UP|MP|VOX") ~ "PARTIDO NUEVO",
str_detect(siglas, "PNV|BNG|ERC|BILDU|CONVERGÈNCIA I UNIÓ") ~ "NACIONALISTA/REGIONALISTA",
TRUE ~ "OTROS"
)
)
resultados_porcentajes <- resultados_porcentajes |> summarise(n_votos = sum(votos), .by = c(fecha,Grupo)) |>
left_join(participacion2, by = "fecha")|>  # Añadir el censo total por elección
mutate(
porcentaje = (n_votos / partic_por_elec) * 100  # Calcular porcentaje sobre el censo total
)
plt1 <- ggplot(resultados_porcentajes, aes(fecha, porcentaje)) +
geom_line(aes(color = Grupo,size= 1.2)) +
geom_point(aes(fill = Grupo),  size = 5, pch = 21, #pch te permite tener color y borde, son ese tipo de puntos
color = "white",
stroke = 1 #el ancho del borde
) +
scale_color_manual(values = c("#076FA1", "#2FC1D3", "#AD8C97","#C7C9CB")) +
scale_fill_manual(values = c("#076FA1", "#2FC1D3", "#AD8C97","#C7C9CB")) +
scale_x_date(
breaks = unique(resultados_porcentajes$fecha),   # Usar solo las fechas específicas
date_labels = "%Y-%b"
) +
scale_y_continuous(
breaks = seq(0, 100, by = 5),  # Intervalos de 5 unidades en el eje Y
limits = c(0, 100))+
theme_minimal()+
theme(legend.position = "right")+
theme(
panel.background = element_rect(fill = "grey95"),#Colores de fondo para el panel y el gráfico
plot.background = element_rect(fill = "grey95"),
panel.grid = element_blank(), #Quitar las cuadrículas
panel.grid.major.y = element_line(color = "#A8BAC4", size = 0.2), #Añadirlas de nuevo al eje y
axis.ticks.length.y = unit(0, "mm"), #Quitar las marcas del eje y
axis.ticks.length.x = unit(2, "mm"), #Dejarlas muy pequeñas en el eje x
axis.title = element_text(size = 14, face = "bold"), # Estilo de títulos de los ejes,
axis.line.x.bottom = element_line(color = "black"), #línea de abajo negra
axis.text.y = element_text(family = "Econ Sans Cnd", size = 10), #customizar los ejes
axis.text.x = element_text(family = "Econ Sans Cnd", size = 10,angle = 37,margin = margin(1.75, 0,0,0,"mm")),
plot.title = element_markdown(family = "Econ Sans Cnd", size = 15,face = "bold")
)+
guides(size = "none")+
labs(title = "Evolución de los votos por grupos")
plt1
#PAso 1: Porcentaje de votos a cada partido por elección
election_data <- election_data |> mutate("participacion" = (votos_candidaturas + votos_blancos + votos_nulos))
participacion2 <- election_data |>
group_by(fecha, id_mun) |>  # Agrupar por elección y municipio
slice(1)|>
ungroup() |>
summarise(partic_por_elec=sum(participacion), .by = fecha)
# Paso 2: Agrupar votos por grupo y calcular el porcentaje
resultados_porcentajes <- election_data |>
mutate(
Grupo = case_when(
str_detect(siglas, "PSOE|PP") ~ "PARTIDO TRADICIONAL",
str_detect(siglas, "CS|UP|MP|VOX") ~ "PARTIDO NUEVO",
str_detect(siglas, "PNV|BNG|ERC|BILDU|CONVERGÈNCIA I UNIÓ") ~ "NACIONALISTA/REGIONALISTA",
TRUE ~ "OTROS"
)
)
resultados_porcentajes <- resultados_porcentajes |> summarise(n_votos = sum(votos), .by = c(fecha,Grupo)) |>
left_join(participacion2, by = "fecha")|>  # Añadir el censo total por elección
mutate(
porcentaje = (n_votos / partic_por_elec) * 100  # Calcular porcentaje sobre el censo total
)
plt1 <- ggplot(resultados_porcentajes, aes(fecha, porcentaje)) +
geom_line(aes(color = Grupo,size= 1.2)) +
geom_point(aes(fill = Grupo),  size = 5, pch = 21, #pch te permite tener color y borde, son ese tipo de puntos
color = "white",
stroke = 1 #el ancho del borde
) +
scale_color_manual(values = c("#076FA1", "#2FC1D3", "#AD8C97","#C7C9CB")) +
scale_fill_manual(values = c("#076FA1", "#2FC1D3", "#AD8C97","#C7C9CB")) +
scale_x_date(
breaks = unique(resultados_porcentajes$fecha),   # Usar solo las fechas específicas
date_labels = "%Y-%b"
) +
scale_y_continuous(
breaks = seq(0, 100, by = 5),  # Intervalos de 5 unidades en el eje Y
limits = c(0, 100))+
theme_minimal()+
theme(legend.position = "right")+
theme(
panel.background = element_rect(fill = "grey95"),#Colores de fondo para el panel y el gráfico
plot.background = element_rect(fill = "grey95"),
panel.grid = element_blank(), #Quitar las cuadrículas
panel.grid.major.y = element_line(color = "#A8BAC4", size = 0.2), #Añadirlas de nuevo al eje y
axis.ticks.length.y = unit(0, "mm"), #Quitar las marcas del eje y
axis.ticks.length.x = unit(2, "mm"), #Dejarlas muy pequeñas en el eje x
axis.title = element_text(size = 14, face = "bold"), # Estilo de títulos de los ejes,
axis.line.x.bottom = element_line(color = "black"), #línea de abajo negra
axis.text.y = element_text(family = "Econ Sans Cnd", size = 10), #customizar los ejes
axis.text.x = element_text(family = "Econ Sans Cnd", size = 10,angle = 37,margin = margin(1.75, 0,0,0,"mm")),
plot.title = element_markdown(family = "Econ Sans Cnd", size = 17,face = "bold", margin = margin(10,0,0,0))
)+
guides(size = "none")+
labs(title = "Evolución de los votos por grupos")
plt1
#PAso 1: Porcentaje de votos a cada partido por elección
election_data <- election_data |> mutate("participacion" = (votos_candidaturas + votos_blancos + votos_nulos))
participacion2 <- election_data |>
group_by(fecha, id_mun) |>  # Agrupar por elección y municipio
slice(1)|>
ungroup() |>
summarise(partic_por_elec=sum(participacion), .by = fecha)
# Paso 2: Agrupar votos por grupo y calcular el porcentaje
resultados_porcentajes <- election_data |>
mutate(
Grupo = case_when(
str_detect(siglas, "PSOE|PP") ~ "PARTIDO TRADICIONAL",
str_detect(siglas, "CS|UP|MP|VOX") ~ "PARTIDO NUEVO",
str_detect(siglas, "PNV|BNG|ERC|BILDU|CONVERGÈNCIA I UNIÓ") ~ "NACIONALISTA/REGIONALISTA",
TRUE ~ "OTROS"
)
)
resultados_porcentajes <- resultados_porcentajes |> summarise(n_votos = sum(votos), .by = c(fecha,Grupo)) |>
left_join(participacion2, by = "fecha")|>  # Añadir el censo total por elección
mutate(
porcentaje = (n_votos / partic_por_elec) * 100  # Calcular porcentaje sobre el censo total
)
plt1 <- ggplot(resultados_porcentajes, aes(fecha, porcentaje)) +
geom_line(aes(color = Grupo,size= 1.2)) +
geom_point(aes(fill = Grupo),  size = 5, pch = 21, #pch te permite tener color y borde, son ese tipo de puntos
color = "white",
stroke = 1 #el ancho del borde
) +
scale_color_manual(values = c("#076FA1", "#2FC1D3", "#AD8C97","#C7C9CB")) +
scale_fill_manual(values = c("#076FA1", "#2FC1D3", "#AD8C97","#C7C9CB")) +
scale_x_date(
breaks = unique(resultados_porcentajes$fecha),   # Usar solo las fechas específicas
date_labels = "%Y-%b"
) +
scale_y_continuous(
breaks = seq(0, 100, by = 5),  # Intervalos de 5 unidades en el eje Y
limits = c(0, 100))+
theme_minimal()+
theme(legend.position = "right")+
theme(
panel.background = element_rect(fill = "grey95"),#Colores de fondo para el panel y el gráfico
plot.background = element_rect(fill = "grey95"),
panel.grid = element_blank(), #Quitar las cuadrículas
panel.grid.major.y = element_line(color = "#A8BAC4", size = 0.2), #Añadirlas de nuevo al eje y
axis.ticks.length.y = unit(0, "mm"), #Quitar las marcas del eje y
axis.ticks.length.x = unit(2, "mm"), #Dejarlas muy pequeñas en el eje x
axis.title = element_text(size = 14, face = "bold"), # Estilo de títulos de los ejes,
axis.line.x.bottom = element_line(color = "black"), #línea de abajo negra
axis.text.y = element_text(family = "Econ Sans Cnd", size = 11), #customizar los ejes
axis.text.x = element_text(family = "Econ Sans Cnd", size = 11,angle = 37,margin = margin(1.75, 0,0,0,"mm")),
plot.title = element_markdown(family = "Econ Sans Cnd", size = 17,face = "bold", margin = margin(5,0,5,0))
)+
guides(size = "none")+
labs(title = "Evolución de los votos por grupos")
plt1
font_add_google("Staatliches","sta")
font_add_google("Raleway","ral")
showtext_auto()
ggplot(resultados_porcentajes2, aes(fill = Grupo, values = porcentaje))+
geom_waffle( n_rows=7, size = 0.15, colour = "white")+
facet_wrap(~fecha,ncol=2,strip.position = "left")+
coord_equal()+
labs(
title="Evolución del reparto del congreso por grupos",
)+
# Mostrar la leyenda
guides(fill = guide_legend(color="white",title=NULL, label.theme = element_text(color = "white",margin = margin(0,5,0,5)))) +
scale_fill_manual(values=c(
"DERECHAS" = "#56B4E9",
"IZQUIERDAS" = "#EE3B3B",
"CENTRO" = "#E69F00",
"NACIONALISTA/REGIONALISTA" = "#009E73",
"OTROS" = "#999999"))+
theme_void()+
theme(
plot.background = element_rect(fill="#222725"),
plot.title = element_markdown(size=18,family='sta',margin=margin(20,0,15,0),color='white', face = "bold"),
strip.text = element_markdown(hjust=0.5,size=15,family='ral',angle=90,lineheight = 0.45,color='white',margin= margin(0,0,3,10)))
resultados_porcentajes2 <- election_data |>
mutate(
Grupo = case_when(
str_detect(siglas, "VOX|PP") ~ "DERECHAS",
str_detect(siglas, "PSOE|UP|MP") ~ "IZQUIERDAS",
str_detect(siglas, "PNV|BNG|ERC|BILDU|CONVERGÈNCIA I UNIÓ") ~ "NACIONALISTA/REGIONALISTA",
str_detect(siglas, "CS") ~ "CENTRO",
TRUE ~ "OTROS"
)
) |>
summarise(
n_votos = sum(votos, na.rm = TRUE),   # Total de votos del grupo por elección
.by = c(fecha,Grupo)
) |>
left_join(participacion2, by = "fecha") |>  # Añadir el censo total por elección
mutate(
porcentaje = (n_votos / partic_por_elec) * 100  # Calcular porcentaje sobre el censo total
)
resultados_porcentajes2 <- resultados_porcentajes2 |>
mutate(Grupo = factor(Grupo, levels = c("DERECHAS", "CENTRO", "IZQUIERDAS",
"NACIONALISTA/REGIONALISTA", "OTROS"), ordered = TRUE))|>
arrange(fecha, Grupo)
font_add_google("Staatliches","sta")
font_add_google("Raleway","ral")
showtext_auto()
ggplot(resultados_porcentajes2, aes(fill = Grupo, values = porcentaje))+
geom_waffle( n_rows=7, size = 0.15, colour = "white")+
facet_wrap(~fecha,ncol=2,strip.position = "left")+
coord_equal()+
labs(
title="Evolución del reparto del congreso por grupos",
)+
# Mostrar la leyenda
guides(fill = guide_legend(color="white",title=NULL, label.theme = element_text(color = "white",margin = margin(0,5,0,5)))) +
scale_fill_manual(values=c(
"DERECHAS" = "#56B4E9",
"IZQUIERDAS" = "#EE3B3B",
"CENTRO" = "#E69F00",
"NACIONALISTA/REGIONALISTA" = "#009E73",
"OTROS" = "#999999"))+
theme_void()+
theme(
plot.background = element_rect(fill="#222725"),
plot.title = element_markdown(size=18,family='sta',margin=margin(20,0,15,0),color='white', face = "bold"),
strip.text = element_markdown(hjust=0.5,size=15,family='ral',angle=90,lineheight = 0.45,color='white',margin= margin(0,0,3,10)))
# Seleccionar el partido ganador por municipio y clasificar por zona
election_data <- election_data |>
mutate(
zona = if_else(censo <= 10000, "Rural", "Urbana")
)
votos_por_zona <- election_data |> summarise(votos=sum(votos), .by = c(zona,siglas))
votos_por_zona2 <- votos_por_zona |> pivot_wider(names_from = zona, values_from = votos) |> mutate(rural=(Rural/sum(Rural))*100, urbana=(Urbana/sum(Urbana))*100, dif_perc=rural-urbana)
#TEst de wilcoxon-MAnWhitney
wilcox.test(votos_por_zona2$rural, votos_por_zona2$urbana, paired = TRUE)
#UN gráfico para ver los cambios
barras_rural <- ggplot(votos_por_zona2) +
geom_col(aes(x = fct_reorder(siglas, dif_perc), y= dif_perc,fill=siglas)) +
scale_y_continuous(limits = c(-6, 6)) +
scale_fill_manual(values= c(CS = "orange",
UP = "purple",
VOX = "green",
OTROS="grey",
MP="#009975",
BNG="#6AADE4",
PNV="#086522",
"CONVERGÈNCIA I UNIÓ"="#FFDFC4",
ERC="yellow",
BILDU="#30D5C8",
PSOE="red",
PP="blue"))+
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank(),
legend.position = "none",
plot.title = element_markdown(
family = "Econ Sans Cnd",
size = 15))+
labs(title = "Diferencia en porcentaje en zonas rurales y urbanas y anómalos",y="diferencia", face="bold")
#GRAFICO CAJAS Y BIGOTES PARA LOS ANOMALOS
bigotes_rural <-ggplot(votos_por_zona2) +
geom_boxplot(aes(y = dif_perc, fill = "#CDAA7D"), width = 0.4) +  # Una sola caja para toda la variable
scale_y_continuous(limits = c(-5, 5)) +  # Ajuste de los límites del eje Y
theme(
axis.text.x = element_blank(),  # Eliminar el eje X
axis.ticks.x = element_blank(),  # Eliminar las marcas del eje X
axis.title.x = element_blank(),  # Eliminar el título del eje X
axis.line.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "none",
)
barras_rural+bigotes_rural+
plot_layout(ncol = 2, widths = c(2.75, 1.25))
# Seleccionar el partido ganador por municipio y clasificar por zona
election_data <- election_data |>
mutate(
zona = if_else(censo <= 10000, "Rural", "Urbana")
)
votos_por_zona <- election_data |> summarise(votos=sum(votos), .by = c(zona,siglas))
votos_por_zona2 <- votos_por_zona |> pivot_wider(names_from = zona, values_from = votos) |> mutate(rural=(Rural/sum(Rural))*100, urbana=(Urbana/sum(Urbana))*100, dif_perc=rural-urbana)
#TEst de wilcoxon-MAnWhitney
wilcox.test(votos_por_zona2$rural, votos_por_zona2$urbana, paired = TRUE)
#UN gráfico para ver los cambios
barras_rural <- ggplot(votos_por_zona2) +
geom_col(aes(x = fct_reorder(siglas, dif_perc), y= dif_perc,fill=siglas)) +
scale_y_continuous(limits = c(-6, 6)) +
scale_fill_manual(values= c(CS = "orange",
UP = "purple",
VOX = "green",
OTROS="grey",
MP="#009975",
BNG="#6AADE4",
PNV="#086522",
"CONVERGÈNCIA I UNIÓ"="#FFDFC4",
ERC="yellow",
BILDU="#30D5C8",
PSOE="red",
PP="blue"))+
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank(),
legend.position = "none",
plot.title = element_markdown(
family = "Econ Sans Cnd",
size = 15,face="bold"))+
labs(title = "Diferencia en porcentaje en zonas rurales y urbanas y anómalos",y="diferencia")
#GRAFICO CAJAS Y BIGOTES PARA LOS ANOMALOS
bigotes_rural <-ggplot(votos_por_zona2) +
geom_boxplot(aes(y = dif_perc, fill = "#CDAA7D"), width = 0.4) +  # Una sola caja para toda la variable
scale_y_continuous(limits = c(-5, 5)) +  # Ajuste de los límites del eje Y
theme(
axis.text.x = element_blank(),  # Eliminar el eje X
axis.ticks.x = element_blank(),  # Eliminar las marcas del eje X
axis.title.x = element_blank(),  # Eliminar el título del eje X
axis.line.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "none",
)
barras_rural+bigotes_rural+
plot_layout(ncol = 2, widths = c(2.75, 1.25))
